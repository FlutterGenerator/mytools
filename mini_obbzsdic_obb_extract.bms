# BMS Script for PAK file extraction
# Generated by PAK Analyzer

# Try both endianness
endian little

# Get file size
get FILESIZE asize
print "File size: %FILESIZE% bytes"

# Approach 1: Try to find file signatures and extract them

# PNG files (signature: 89 50 4E 47 0D 0A 1A 0A)
print "Searching for PNG files..."
findloc OFFSET binary "\x89\x50\x4E\x47\x0D\x0A\x1A\x0A"
if OFFSET != ""
    print "Found PNG signature at offset %OFFSET%"
    goto OFFSET
    log "extracted_image.png" OFFSET 0x100000
endif

# JPEG files (signature: FF D8 FF)
print "Searching for JPEG files..."
findloc OFFSET binary "\xFF\xD8\xFF"
if OFFSET != ""
    print "Found JPEG signature at offset %OFFSET%"
    goto OFFSET
    log "extracted_image.jpg" OFFSET 0x100000
endif

# ZIP files (signature: 50 4B 03 04)
print "Searching for ZIP files..."
findloc OFFSET binary "\x50\x4B\x03\x04"
if OFFSET != ""
    print "Found ZIP signature at offset %OFFSET%"
    goto OFFSET
    log "extracted_archive.zip" OFFSET 0x1000000
endif

# OGG files (signature: OggS)
print "Searching for OGG files..."
findloc OFFSET binary "OggS"
if OFFSET != ""
    print "Found OGG signature at offset %OFFSET%"
    goto OFFSET
    log "extracted_audio.ogg" OFFSET 0x1000000
endif

# Approach 2: Try to extract based on common mobile game PAK formats
print "Trying common mobile game PAK formats..."

# Reset to beginning of file
goto 0

# Try different header structures
# Structure 1: 4-byte magic + 4-byte file count + offset table
set OFFSET 8
goto OFFSET
get file_count long
if file_count > 0 && file_count < 10000
    print "Potential file count found: %file_count%"
    
    # Try to read offset table
    for i = 0 < file_count
        get file_offset long
        get file_size long
        
        # Check if offset and size make sense
        if file_offset < FILESIZE && file_size > 0 && file_size < FILESIZE
            print "Potential file at offset %file_offset% with size %file_size%"
            string filename = "file_"
            string filename += i
            log filename file_offset file_size
        endif
    next i
endif

# Approach 3: Try non-chunked extraction
print "Performing non-chunked extraction..."

# Set chunk size
set CHUNK_SIZE 1048576 # 1MB

# Calculate number of chunks
math NUM_CHUNKS = FILESIZE / CHUNK_SIZE
math NUM_CHUNKS + 1 # Add one to handle remainder

# Extract chunks
for i = 0 < NUM_CHUNKS
    # Calculate offset and size
    math OFFSET = i * CHUNK_SIZE
    
    # Handle last chunk
    if i == NUM_CHUNKS - 1
        math SIZE = FILESIZE - OFFSET
    else
        math SIZE = CHUNK_SIZE
    endif
    
    # Skip if size is 0
    if SIZE <= 0
        break
    endif
    
    # Create chunk name
    string CHUNK_NAME = "chunk_"
    string CHUNK_NAME += i
    string CHUNK_NAME += ".bin"
    
    # Extract chunk
    log CHUNK_NAME OFFSET SIZE
next i

print "Extraction complete. Check the output directory for extracted files."
